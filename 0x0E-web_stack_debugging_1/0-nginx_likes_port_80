#!/usr/bin/env bash
# Configures an Nginx server to listen on port 80.

# Install Nginx if not already installed
apt-get update
apt-get install -y nginx

# Configure Nginx to listen on port 80
cat <<EOF > /etc/nginx/sites-available/default
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

# Ensure the HTML directory exists and create a test HTML file
mkdir -p /var/www/html
cat <<EOF > /var/www/html/index.html
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
EOF


# Test the Nginx configuration for syntax errors
nginx -t

# If the configuration test is successful, start Nginx
if [ $? -eq 0 ]; then
    # Check if Nginx is running
    if pgrep nginx > /dev/null; then
        echo "Nginx is already running."
    else
        # Start Nginx
        nginx
    fi
fi

# Verify Nginx is listening on port 80
ss -tuln | grep ':80'
# Check if Nginx is returning HTTP 200
HTTP_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" http://localhost)

if [ "$HTTP_CODE" -eq 200 ]; then
    echo "Nginx is serving the web page with HTTP 200"
else
    echo "Nginx is not serving the web page correctly. HTTP code: $HTTP_CODE"
    exit 1
fi
